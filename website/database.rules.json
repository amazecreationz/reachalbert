{
  "rules": {
    "isAdmin":{
        ".read": "root.child('admins').val().contains(auth.email)",
        ".write": false
		},
    "status":{
        ".read": "root.child('admins').val().contains(auth.email)",
        ".write": false
		},
    "admins":{
      ".read": "root.child('admins').val().contains(auth.email)",
      ".write": "root.child('admins').val().contains(auth.email)"
    },
    "read_allowed":{
      ".read": "root.child('admins').val().contains(auth.email)",
      ".write": "root.child('admins').val().contains(auth.email)"
    },
    "allowed_users":{
      ".read": "root.child('read_allowed').val().contains(auth.email)",
      ".write": "root.child('admins').val().contains(auth.email)"
    },
    "references": {
      "$user": {
          ".read": "root.child('admins').val().contains(auth.email) || auth.uid === $user",
          ".write": "root.child('admins').val().contains(auth.email) || (auth.uid === $user && auth.email === newData.child('email').val() && auth.uid === newData.child('uid').val())"
      },
      ".read": "root.child('admins').val().contains(auth.email)",
      ".write": "root.child('admins').val().contains(auth.email)"
    },
    "password": {
      "$user": {
          ".read": "root.child('admins').val().contains(auth.email) || auth.uid === $user",
          ".write": "root.child('admins').val().contains(auth.email) || auth.uid === $user"
      }
    },
    "users": {
      "$user": {
          ".read": "root.child('admins').val().contains(auth.email) || auth.uid === $user",
          ".write": "root.child('admins').val().contains(auth.email) || auth.uid === $user"
      },
      "messages": {
        	".read": "root.child('admins').val().contains(auth.email) || (auth.uid === data.child('uid').val() && auth.email === data.child('email').val())",
          ".write": "root.child('admins').val().contains(auth.email) || (auth.uid === data.child('uid').val() && auth.email === data.child('email').val())"
      },
      "teach": {
        	".read": "root.child('admins').val().contains(auth.email) || (auth.uid === data.child('uid').val() && auth.email === data.child('email').val())",
          ".write": "root.child('admins').val().contains(auth.email) || (auth.uid === data.child('uid').val() && auth.email === data.child('email').val())"
      }
    }
  }
}